#  realizando import's
from sqlalchemy import create_engine, text
from sqlalchemy import MetaData
from sqlalchemy import Table
from sqlalchemy import Column
from sqlalchemy import Integer
from sqlalchemy import String
from sqlalchemy import ForeignKey

# criando a engine
engine = create_engine('sqlite:///:memory')

# criando o metadata
metadata_obj = MetaData()

# primeiro banco de dados users
user = Table(

    'user',
    metadata_obj,
    Column('user_id', Integer, primary_key=True),
    Column('user_name', String(40), nullable=False),
    Column('e-mail', String(60)),
    Column('nickname', String(50), nullable=False),
)

# segundo banco de dados users_prefs
user_prefs = Table(

    'user_prefs', metadata_obj,
    Column('pref_id', Integer, primary_key=True),
    Column('user_id', Integer, ForeignKey("user.user_id"), nullable=False),
    Column('pref_name', String(40), nullable=False),
    Column('pref_value', String(100))
)

# imprimindo resultados user_prefs
print("\nMostrando resultados da validação 1 user_prefs")
print(user_prefs.primary_key)
print(user_prefs.constraints)

# definindo lista
for table in metadata_obj.sorted_tables:
    print(table)

# mostrando engine
metadata_obj.create_all(engine)



# terceiro banco de dados financial_info
metadata_bd_obj = MetaData()
financial_info = Table(

    'financial_info',
    metadata_bd_obj,
    Column('id', Integer, primary_key=True),
    Column('value', String(100), nullable=False)
)

# inserindo info na tabela user
sql_insert = text("insert into user values(2, 'Maria', 'email@email.com','Ma')")
engine.execute(sql_insert)

print("\nMostrando resultados da validação 2 financial_info")
print(financial_info.primary_key)
print(financial_info.constraints)

print("\nExecutando statement sql")
sql = text('select * from user')

result = engine.execute(sql)
for row in result:
    print(row)

'''
    Column('user_id', Integer, primary_key=True),
    Column('user_name', String(40), nullable=False),
    Column('e-mail', String(60)),
    Column('nickname', String(50), nullable=False),

'''



